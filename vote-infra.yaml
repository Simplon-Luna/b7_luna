#Redis Deploy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: az-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-azure
  template:
    metadata:
      labels:
        app: redis-azure
    spec:
      volumes:
      - name: red-vol
        persistentVolumeClaim:
            claimName: red-pvc
      containers:
      - name: redis
        image: redis:latest
        args: ["--requirepass", "$(REDIS_PWD)"]
        volumeMounts:
        - name: red-vol
          mountPath: /data
        env:
        - name: ALLOW_EMPTY_PASSWORD
          value: "no"
        - name: REDIS_PWD
          valueFrom:
            secretKeyRef:
              name: reddb-pass
              key: password
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 6379
          name: redis
---
# Redis Service (ClusterIP)
apiVersion: v1
kind: Service
metadata:
  name: redis-service
spec: # default type is ClusterIP, there is no reason to specify  type: ClusterIP
  ports:
  - port: 6379
  selector:
    app: redis-azure
---
# Vote App Deploy
apiVersion: apps/v1
kind: Deployment
metadata:
  name: alfred-voteapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: votingapp-azure
  template:
    metadata:
      labels:
        app: votingapp-azure
    spec:
      nodeSelector:
        "kubernetes.io/os": linux
      containers:
      - name: alfred-voting
        image: simplonasa/azure_voting_app:v1.0.11
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 250m
            memory: 256Mi
        ports:
        - containerPort: 80
        env:
        - name: REDIS
          value: "redis-service"
        - name: REDIS_PWD
          valueFrom:
            secretKeyRef:
              name: reddb-pass
              key: password
---
# App Service (LB)
apiVersion: v1
kind: Service
metadata:
  name: vote-service
spec:
  type: LoadBalancer
  ports:
  - port: 80
  selector:
    app: votingapp-azure
---
# PV Claim
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: red-pvc
spec:
  storageClassName: azurefile-csi
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 3Gi
---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: votingapp
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/issuer: letsencrypt
    cert-manager.io/issuer-kind: Issuer
    cert-manager.io/issuer-group: cert-manager.io
spec:
  ingressClassName: nginx
  rules:
  - host: kitty.simplon-ely.space
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vote-service
            port: 
              number: 80
  tls: # placing a host in the TLS config will determine what ends up in the cert's subjectAlt
  - hosts:
    - kitty.simplon-ely.space
    secretName: secret-tls # cert-manager will store the created certificate in this secret.
---
# Cert Manager
apiVersion: cert-manager.io/v1
kind: certificate
metadata:
  name:  kitty.simplon-ely.space
spec:
  dnsNames:
  - kitty.simplon-ely.space
  issuerRef:
    name: letsencrypt
    kind: Issuer
  secretName: secret-tls
---
# # DNS
# apiVersion: v1
# data:
#   Corefile: |
#     .:53 {
#         errors
#         ready
#         health
#         kubernetes cluster.local in-addr.arpa ip6.arpa {
#           pods insecure
#           fallthrough in-addr.arpa ip6.arpa
#         }
#         prometheus :9153
#         forward . /etc/resolv.conf
#         cache 30
#         loop
#         reload
#         loadbalance
#         import custom/*.override
#     }
#     import custom/*.server
# kind: ConfigMap
# metadata:
#   annotations:
#     kubectl.kubernetes.io/last-applied-configuration: |
#       {"apiVersion":"v1","data":{"Corefile":".:53 {\n    errors\n    ready\n    health\n    kubernetes cluster.local in-addr.arpa ip6.arpa {\n      pods insecure\n      fallthrough in-addr.arpa ip6.arpa\n    }\n    prometheus :9153\n    forward . /etc/resolv.conf\n    cache 30\n    loop\n    reload\n    loadbalance\n    import custom/*.override\n}\nimport custom/*.server\n"},"kind":"ConfigMap","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true"},"name":"coredns","namespace":"kube-system"}}
#   creationTimestamp: "2022-10-12T08:05:48Z"
#   labels:
#     addonmanager.kubernetes.io/mode: Reconcile
#     k8s-app: kube-dns
#     kubernetes.io/cluster-service: "true"
#   name: coredns
#   namespace: kube-system
#   resourceVersion: "464"
#   uid: 32e2daab-e9cf-4d23-b8bf-90a5ef25a9cb
